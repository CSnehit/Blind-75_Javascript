Question: https://leetcode.com/problems/3sum/description/

Solution: 
/**
 * @param {number[]} nums
 * @return {number[][]}
 */
var threeSum = function (nums) {
    let res = [];

    let uni = Array.from(nums);
    uni.sort((a, b) => a - b);

    for (let k = 0; k < (uni.length - 2); k++) {
        if(uni[k-1] === uni[k]){
            continue;
        }
        let i = k + 1;
        let j = uni.length - 1;
        while (i < j) {
            if ((uni[i] + uni[j]) === (-1 * uni[k])){
                res.push([uni[k], uni[i], uni[j]]);
                i++, j--;
            } else if((uni[i] + uni[j]) > (-1 * uni[k])){
                break;
            } else {
                i++;
            }
        }
    }
    const unique = new Set(res.map(arr => JSON.stringify(arr)));
    const uniRes = Array.from(unique).map(str => JSON.parse(str));
    return uniRes;
};
